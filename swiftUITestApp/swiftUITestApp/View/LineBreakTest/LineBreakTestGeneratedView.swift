import SwiftUI
import SwiftJsonUI
import Combine

struct LineBreakTestGeneratedView: View {
    @EnvironmentObject var viewModel: LineBreakTestViewModel
    @StateObject private var dynamicViewModel = DynamicViewModel(jsonName: "line_break_test")
    
    var body: some View {
        if ViewSwitcher.isDynamicMode {
            DynamicView(jsonName: "line_break_test", viewId: "line_break_test_view", data: viewModel.data.toDictionary(viewModel: viewModel))
                .environmentObject(dynamicViewModel)
        } else {
            // Generated SwiftUI code from line_break_test.json
            // This will be updated when you run 'sjui build'
            // >>> GENERATED_CODE_START
            AdvancedKeyboardAvoidingScrollView(.vertical, showsIndicators: true) {
                VStack(alignment: .leading, spacing: 0) {
                    VStack(alignment: .leading, spacing: 0) {
                        Text("\(viewModel.data.title)")
                            .font(.system(size: 24))
                            .foregroundColor(Color(red: 0.0, green: 0.0, blue: 0.0))
                            .padding(.top, 20)
                        Text("lineBreakMode: Word (default)")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 0.8784313725490196, green: 0.8784313725490196, blue: 0.8784313725490196))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lineBreakMode: Char")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 1.0, green: 0.8784313725490196, blue: 0.8784313725490196))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lineBreakMode: Clip")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .truncationMode(.tail)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 0.8784313725490196, green: 1.0, blue: 0.8784313725490196))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lineBreakMode: Head")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .truncationMode(.head)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 0.8784313725490196, green: 0.8784313725490196, blue: 1.0))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lineBreakMode: Middle")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .truncationMode(.middle)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 1.0, green: 1.0, blue: 0.8784313725490196))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lineBreakMode: Tail")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 20)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(2)
                            .truncationMode(.tail)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .frame(height: 60)
                            .background(Color(red: 1.0, green: 0.8784313725490196, blue: 1.0))
                            .padding(.top, 10)
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("Lines Property Test")
                            .font(.system(size: 16))
                            .foregroundColor(Color(red: 0.2, green: 0.2, blue: 0.2))
                            .fontWeight(.bold)
                            .padding(.top, 30)
                        Text("lines: 1")
                            .font(.system(size: 14))
                            .foregroundColor(Color(red: 0.4, green: 0.4, blue: 0.4))
                            .padding(.top, 10)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(1)
                            .truncationMode(.tail)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .background(Color(red: 0.8156862745098039, green: 1.0, blue: 1.0))
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lines: 3")
                            .font(.system(size: 14))
                            .foregroundColor(Color(red: 0.4, green: 0.4, blue: 0.4))
                            .padding(.top, 10)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(3)
                            .truncationMode(.tail)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .background(Color(red: 1.0, green: 0.8156862745098039, blue: 0.8156862745098039))
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Text("lines: 0 (unlimited)")
                            .font(.system(size: 14))
                            .foregroundColor(Color(red: 0.4, green: 0.4, blue: 0.4))
                            .padding(.top, 10)
                        Text("\(viewModel.data.longText)")
                            .font(.system(size: 14))
                            .lineLimit(nil)
                            .padding(10)
                            .frame(maxWidth: .infinity)
                            .background(Color(red: 0.8156862745098039, green: 1.0, blue: 0.8156862745098039))
                            .padding(.leading, 20)
                            .padding(.trailing, 20)
                        Spacer(minLength: 0)
                    }
                        .frame(maxWidth: .infinity)
                    Spacer(minLength: 0)
                }
                    .frame(maxWidth: .infinity, maxHeight: .infinity)
            }
                .frame(maxWidth: .infinity, maxHeight: .infinity)
                .background(Color(red: 0.9725490196078431, green: 0.9725490196078431, blue: 0.9725490196078431))
            // >>> GENERATED_CODE_END
        }
    }
}
